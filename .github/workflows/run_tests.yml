# Taken from: https://github.com/logtalk-actions/workflows/blob/master/testing_multiple_backends.yml
# Inspired by: https://github.com/logtalk-actions/setup-logtalk
name: Testing

on: [push]

jobs:
  test:
    runs-on: [ubuntu-latest, macOS-latest, windows-latest]
    strategy:
      fail-fast: false
      matrix:
        backend: [eclipse, swi-prolog, gnu-prolog, scryer-prolog, b-prolog, ciao-prolog, cx-prolog, jip-prolog, lvm-prolog, quintus-prolog, sicstus-prolog, tau-prolog, trealla-prolog, xsb-prolog, yap-prolog]
    steps:
      - if: matrix.backend == 'eclipse'
        name: Install backend
        uses: logtalk-actions/setup-eclipse@master
        with:
          eclipse-version: '7.0_54'
      - if: matrix.backend == 'swi-prolog'
        name: Install backend
        uses: logtalk-actions/setup-swi-prolog@master
        with:
          swi-prolog-version: latest
      - if: matrix.backend == 'gnu-prolog'
        name: Install backend
        uses: logtalk-actions/setup-gnu-prolog@master
        with:
          gnu-prolog-version: latest
      - if: matrix.backend == 'scryer-prolog'
        name: Install backend
        uses: logtalk-actions/setup-scryer-prolog@master
        with:
          scryer-prolog-version: latest
      - if: matrix.backend == 'b-prolog'
        name: Install backend
        uses: logtalk-actions/setup-b-prolog@master
        with:
          b-prolog-version: latest
      - if: matrix.backend == 'ciao-prolog'
        name: Install backend
        uses: logtalk-actions/setup-ciao-prolog@master
        with:
          ciao-prolog-version: latest
      - if: matrix.backend == 'cx-prolog'
        name: Install backend
        uses: logtalk-actions/setup-cx-prolog@master
        with:
          cx-prolog-version: latest
      - if: matrix.backend == 'jip-prolog'
        name: Install backend
        uses: logtalk-actions/setup-jip-prolog@master
        with:
          jip-prolog-version: latest
      - if: matrix.backend == 'lvm-prolog'
        name: Install backend
        uses: logtalk-actions/setup-lvm-prolog@master
        with:
          lvm-prolog-version: latest
      - if: matrix.backend == 'quintus-prolog'
        name: Install backend
        uses: logtalk-actions/setup-quintus-prolog@master
        with:
          quintus-prolog-version: latest 
      - if: matrix.backend == 'sicstus-prolog'
        name: Install backend
        uses: logtalk-actions/setup-sicstus-prolog@master
        with:
          sicstus-prolog-version: latest 
      - if: matrix.backend == 'tau-prolog'
        name: Install backend
        uses: logtalk-actions/setup-tau-prolog@master
        with:
          tau-prolog-version: latest 
      - if: matrix.backend == 'trealla-prolog'
        name: Install backend
        uses: logtalk-actions/setup-trealla-prolog@master
        with:
          trealla-prolog-version: latest 
      - if: matrix.backend == 'xsb-prolog'
        name: Install backend
        uses: logtalk-actions/setup-xsb-prolog@master
        with:
          xsb-prolog-version: latest 
      - if: matrix.backend == 'yap-prolog'
        name: Install backend
        uses: logtalk-actions/setup-yap-prolog@master
        with:
          yap-prolog-version: latest                                                   
      - name: Install Logtalk
        uses: logtalk-actions/setup-logtalk@master
        with:
          logtalk-version: git
      - name: Checkout Logtalk application to be tested
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Define environment variable for the test results
        run: echo "::set-env name=EXIT::0"
      - name: Run the application tests
        run: |
          logtalk_tester -p ${{ matrix.backend }} -f xunit -c xml || EXIT=$?
          xunit-viewer --results=xunit_report.xml --output=xunit_report.html
          xsltproc --stringparam prefix work/$(basename $GITHUB_REPOSITORY)/$(basename $GITHUB_REPOSITORY)/ --stringparam url https://github.com/$GITHUB_REPOSITORY/tree/$GITHUB_SHA -o coverage_report.html coverage_report.xml
          echo "EXIT=$EXIT" >> $GITHUB_ENV
      - name: Upload xUnit report
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.backend }}-xunit-report
          path: xunit_report.html
      - name: Upload code coverage report
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.backend }}-code-coverage-report
          path: coverage_report.html
      - name: Set workflow exit status after the test results
        run: exit $EXIT
